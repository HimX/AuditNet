// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221004220252_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("API.Models.Audit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("AuditPlanId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CommentPageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AuditPlanId");

                    b.HasIndex("CommentPageId");

                    b.ToTable("Audits");
                });

            modelBuilder.Entity("API.Models.AuditPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CommentPageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CommentPageId");

                    b.ToTable("AuditPlans");
                });

            modelBuilder.Entity("API.Models.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CommentPageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("State")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CommentPageId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("API.Models.CommentPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CommentPages");
                });

            modelBuilder.Entity("API.Models.Audit", b =>
                {
                    b.HasOne("API.Models.AuditPlan", null)
                        .WithMany("Audits")
                        .HasForeignKey("AuditPlanId");

                    b.HasOne("API.Models.CommentPage", "CommentPage")
                        .WithMany()
                        .HasForeignKey("CommentPageId");

                    b.Navigation("CommentPage");
                });

            modelBuilder.Entity("API.Models.AuditPlan", b =>
                {
                    b.HasOne("API.Models.CommentPage", "CommentPage")
                        .WithMany()
                        .HasForeignKey("CommentPageId");

                    b.Navigation("CommentPage");
                });

            modelBuilder.Entity("API.Models.Comment", b =>
                {
                    b.HasOne("API.Models.CommentPage", null)
                        .WithMany("Comments")
                        .HasForeignKey("CommentPageId");
                });

            modelBuilder.Entity("API.Models.AuditPlan", b =>
                {
                    b.Navigation("Audits");
                });

            modelBuilder.Entity("API.Models.CommentPage", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
